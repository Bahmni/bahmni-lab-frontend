diff --git a/node_modules/@openmrs/esm-react-utils/src/UserHasAccess.tsx b/node_modules/@openmrs/esm-react-utils/src/UserHasAccess.tsx
index 2de7d88..55912d3 100644
--- a/node_modules/@openmrs/esm-react-utils/src/UserHasAccess.tsx
+++ b/node_modules/@openmrs/esm-react-utils/src/UserHasAccess.tsx
@@ -1,13 +1,18 @@
 /** @module @category API */
+import { getCurrentUser, LoggedInUser, userHasAccess } from "@openmrs/esm-api";
+import { InlineNotification } from "carbon-components-react";
 import React, { useEffect, useState } from "react";
-import { getCurrentUser, userHasAccess, LoggedInUser } from "@openmrs/esm-api";
 
 export interface UserHasAccessProps {
   privilege: string;
+  unauthorisedResponse?: string | undefined;
+  redirectUrl?: string | undefined;
 }
 
 export const UserHasAccess: React.FC<UserHasAccessProps> = ({
   privilege,
+  unauthorisedResponse,
+  redirectUrl,
   children,
 }) => {
   const [user, setUser] = useState<LoggedInUser | null>(null);
@@ -23,5 +28,21 @@ export const UserHasAccess: React.FC<UserHasAccessProps> = ({
     return <>{children}</>;
   }
 
+  if (unauthorisedResponse) {
+    return (
+      <div className="omrs-inline-notifications-container">
+        <InlineNotification
+          title="Unauthorised"
+          subtitle={unauthorisedResponse}
+          kind="error"
+        />
+      </div>
+    );
+  }
+
+  if (redirectUrl) {
+    window.location.replace(redirectUrl);
+  }
+
   return null;
 };
